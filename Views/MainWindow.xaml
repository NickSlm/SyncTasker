<Window x:Class="ToDoListPlus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoListPlus"
        xmlns:converters="clr-namespace:ToDoListPlus.Converters"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Closed="MainWindow_Closed"
        Title="ToDoPlus" Height="640" Width="640">

    <Window.Resources>
        <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Style.Triggers>
                
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MicrosoftButtonStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#DDD"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Direction="-120" BlurRadius="10" Opacity="0.4" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVis"/>
        <converters:StringToVisibilityHiddenConverter x:Key="StringToVisibilityHiddenConverter"/>
        <converters:StringToVisibilityCollapsedConverter x:Key="StringToVisibilityCollapsedConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="PriorityTextStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Importance}" Value="high">
                    <Setter Property="Foreground" Value="Red"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Importance}" Value="normal">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Importance}" Value="low">
                    <Setter Property="Foreground" Value="Green"/>

                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


        <materialDesign:DialogHost
            Identifier="RootDialog"
            DialogContentUniformCornerRadius="20"
            DialogTheme="Inherit">  
        <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
            <!--Header Section Login-->
            <Border Grid.Row="0"
                    Background="#f6f6f6"
                    Padding="8"
                    BorderBrush="#DDD"
                    BorderThickness="0 0 0 1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal" 
                                VerticalAlignment="Center" 
                                DockPanel.Dock="Left">
                        <materialDesign:PackIcon Kind="AccountCircle" 
                                                 Width="24" 
                                                 Height="24" 
                                                 Margin="0,0,8,0" 
                                                 Foreground="#555"/>
                        <TextBlock Text="{Binding AuthorizationVM.AccountUsername}"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   FontWeight="SemiBold"
                                   Foreground="#333"/>
                    </StackPanel>

                    <materialDesign:PopupBox VerticalAlignment="Center"
                         HorizontalAlignment="Right"
                         Margin="0,0,12,0"
                         Padding="8"
                         PlacementMode="BottomAndAlignRightEdges"
                         StaysOpen="False"
                         Content="Account">
                        <StackPanel>
                            <Button Style="{StaticResource MaterialDesignFlatDarkButton}" 
                                    Content="Settings" 
                                    Command="{Binding OpenSettingsCommand}" />

                            <Button Style="{StaticResource MaterialDesignFlatDarkButton}" 
                                    Command="{Binding AuthorizationVM.SignOutCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="AccountSwitch" Width="20" Height="20" Margin="0,0,8,0"/>
                                    <TextBlock Text="Sign out" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>

                </Grid>
            </Border>

            <!--Main Body Section-->
            <Grid Grid.Row="1" 
                  Background="#F5F5F5" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <!--Main Body Top Section Show Tasks-->
                    <Grid Grid.Row="0" Margin="8">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!--Show Tasks Progress Bar-->
                            <Grid Grid.Row="0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.8*"/>
                                    <ColumnDefinition Width="0.2*"/>
                                </Grid.ColumnDefinitions>
                                <ProgressBar Grid.Column="0" 
                                             Maximum="100" 
                                             Height="32" 
                                             Value="{Binding ToDoListVM.CompletedTasks}" 
                                             Foreground="#66BB6A" 
                                             Background="#E0E0E0"
                                             BorderBrush="Transparent"
                                             BorderThickness="0"
                                             Margin="8,0"/>

                                <TextBlock Grid.Column="0" 
                                           Text="{Binding ToDoListVM.CompletedTasks, StringFormat={}{0:0}%}" 
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center"  
                                           Foreground="black" 
                                           FontWeight="SemiBold"
                                           FontSize="16"/>

                                <Button Command="{Binding ToDoListVM.CleanUpCommand}"
                                        CommandParameter="{Binding ToDoListVM.ToDoList}"
                                        Margin="8,0"
                                        Grid.Column="1"
                                        Style="{StaticResource MaterialDesignPaperLightButton}"
                                        ToolTip="Clear all completed tasks"
                                        Content="Clean Up">
                                </Button>
                            </Grid>
                            <!--Show DataGrid Tasks-->
                            <Grid Grid.Row="1" 
                                  Margin="8" 
                                  HorizontalAlignment="Stretch" >

                                <DataGrid ItemsSource="{Binding ToDoListVM.ToDoList}"
                                            AutoGenerateColumns="False"
                                            SelectionMode="Single"
                                            SelectionUnit="FullRow"
                                            IsReadOnly="True"
                                            HeadersVisibility="Column"
                                            GridLinesVisibility="None"
                                            Focusable="False"
                                          >
                                    <!-- Clear out Material styles -->
                                    <DataGrid.Resources>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="Background" Value="LightCyan"/>
                                        </Style>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Style.Triggers>
                                                <!-- Remove selection highlight -->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                                <!-- Remove hover effect on cell -->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="Complete">
                                                    <Setter Property="Background" Value="LightGreen"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                                    <Setter Property="IsEnabled" Value="False"/>
                                                    <Setter Property="Opacity" Value="0.5"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>

                                    <DataGrid.Columns>
                                        <!--Complete Checkbox-->
                                        <DataGridTemplateColumn Header="Done" Width="Auto" SortMemberPath="IsComplete">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsComplete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"
                                                              />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Task Title,Description-->
                                        <DataGridTemplateColumn Header="Task"
                                                                Width="*"
                                                                >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel Margin="4">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>

                                                            <!-- Calendar icon, shown only if it's an event -->
                                                            <materialDesign:PackIcon 
                                                                Kind="CalendarCheck"
                                                                Grid.Column="0"
                                                                Margin="0,2,4,0"
                                                                VerticalAlignment="Center"
                                                                ToolTip="Microsoft Event"
                                                                Visibility="{Binding EventId, Converter={StaticResource StringToVisibilityHiddenConverter}}" />

                                                            <!-- Task Title -->
                                                            <TextBlock 
                                                                Grid.Column="1"
                                                                Text="{Binding Title}"
                                                                TextWrapping="Wrap"
                                                                VerticalAlignment="Center"
                                                                Margin="0"
                                                                Style="{StaticResource MaterialDesignSubtitle2TextBlock}" />
                                                        </Grid>

                                                        <!-- Task Description -->
                                                        <TextBlock 
                                                            Text="{Binding Description}"
                                                            TextWrapping="Wrap"
                                                            VerticalAlignment="Top"
                                                            Margin="20,2,0,0" 
                                                            Visibility="{Binding Description, Converter={StaticResource StringToVisibilityCollapsedConverter}}"
                                                            Style="{StaticResource MaterialDesignCaptionTextBlock}" />
                                                    </StackPanel>

                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Task Priority-->
                                        <DataGridTemplateColumn Header="Priority" Width="Auto" SortMemberPath="prioritySortOrder">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Importance}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               Style="{StaticResource PriorityTextStyle}">
                                                    </TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Task Due Date-->
                                        <DataGridTemplateColumn Header="Due Date" Width="Auto" SortMemberPath="DueDate">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DueDate, StringFormat='{}{0:dd-MM-yyyy}'}"
                                                                Style="{StaticResource MaterialDesignCaptionTextBlock}"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Remove Button-->
                                        <DataGridTemplateColumn Header="" Width="Auto" MinWidth="36">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Command="{Binding DataContext.ToDoListVM.RemoveTaskCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                            CommandParameter="{Binding}" 
                                                            Style="{StaticResource IconButtonStyle}">
                                                        <materialDesign:PackIcon Kind="DeleteOutline" Width="24" Height="24" />
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Grid>
                        </Grid>
                    </Grid>
                    <!--Main Body Bottom Section Add New Task-->
                    <Border Grid.Row="1"
                            Background="#FAFAFA"
                            BorderThickness="1,1,0,0"
                            BorderBrush="#DDD"
                            CornerRadius="12,12,0,0"
                            Padding="8 4">
                        <Button Command="{Binding NewTaskCommand}"
                                Style="{StaticResource MaterialDesignPaperLightButton}"
                                Margin="0 8"
                                Padding="10 6"
                                HorizontalAlignment="Center"
                                ToolTip="Add new task">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Plus" Width="18" Height="18" Margin="0 0 6 0" />
                                <TextBlock Text="Add New Task" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Border>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
