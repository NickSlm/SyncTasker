<Window x:Class="ToDoListPlus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoListPlus"
        xmlns:converters="clr-namespace:ToDoListPlus.Converters"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="ToDoPlus" Height="640" Width="640">

    <Window.Resources>
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="2,0"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="MicrosoftButtonStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="#2D89EF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Direction="-120" BlurRadius="10" Opacity="0.4" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>
        </Style>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVis"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

    </Window.Resources>


    <materialDesign:DialogHost
        DialogContentUniformCornerRadius="20"
        DialogTheme="Inherit">  
        <Grid>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
            <!--Header Section Login-->
            <Border Grid.Row="0"
                    Background="#f6f6f6"
                    Padding="8"
                    BorderBrush="#DDD"
                    BorderThickness="0 0 0 1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                               Text="{Binding AuthorizationVM.AccountUsername}"
                               VerticalAlignment="Center"
                               FontSize="16"
                               FontWeight="SemiBold"
                               Foreground="#333"
                               Margin="12 0 0 0" />

                    <!-- Sign in/out buttons here -->
                    <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center">
                        <Button Visibility="{Binding AuthorizationVM.IsSignedIn, Converter={StaticResource InverseBoolToVis}}" 
                                Command="{Binding AuthorizationVM.AuthorizationCommand}" 
                                Style="{StaticResource MicrosoftButtonStyle}">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="D:\Projects\ToDoListPlus\Assets\Icons\microsoftIcon.png"/>
                                <TextBlock HorizontalAlignment="Center" 
                                           Margin="2"
                                           VerticalAlignment="Center"
                                           Text="Sign in with Microsoft"/>
                            </StackPanel>

                        </Button>
                        <Button Visibility="{Binding AuthorizationVM.IsSignedIn, Converter={StaticResource BoolToVis}}"
                                Command="{Binding AuthorizationVM.SignOutCommand}" 
                                Style="{StaticResource MicrosoftButtonStyle}">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image Source="D:\Projects\ToDoListPlus\Assets\Icons\microsoftIcon.png"/>
                                <TextBlock HorizontalAlignment="Center" 
                                           Margin="2"
                                           VerticalAlignment="Center"
                                           Text="Sign out"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <!--Main Body Section-->
            <Grid Grid.Row="1" 
                  Background="#F5F5F5" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--Main Body Top Section Show Tasks-->
                    <Grid Grid.Row="0" Margin="8">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--Show Tasks Progress Bar-->
                            <Grid Grid.Row="0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.8*"/>
                                    <ColumnDefinition Width="0.2*"/>
                                </Grid.ColumnDefinitions>
                                <ProgressBar Grid.Column="0" 
                                             Maximum="100" 
                                             Height="32" 
                                             Value="{Binding ToDoListVM.CompletedTasks}" 
                                             Foreground="#66BB6A" 
                                             Background="#E0E0E0"
                                             BorderBrush="Transparent"
                                             BorderThickness="0"
                                             Margin="8,0"/>

                                <TextBlock Grid.Column="0" 
                                           Text="{Binding ToDoListVM.CompletedTasks, StringFormat={}{0:0}%}" 
                                           HorizontalAlignment="Center" 
                                           VerticalAlignment="Center"  
                                           Foreground="black" 
                                           FontWeight="SemiBold"
                                           FontSize="16"/>
                                <Button
                                    Command="{Binding ToDoListVM.CleanItemsCommand}"
                                    CommandParameter="{Binding ToDoListVM.ToDoList}"
                                    Margin="8,0"
                                    Grid.Column="1"
                                    Content="Clear"
                                    Style="{StaticResource MaterialDesignPaperLightButton}"
                                    ToolTip="Resource  name: MaterialDesignPaperLightButton"/>
                            </Grid>

                            <!--Show Tasks ListBox Tasks-->
                            <Grid Grid.Row="1" 
                                  Margin="8" 
                                  HorizontalAlignment="Stretch" >
                                <DataGrid ItemsSource="{Binding ToDoListVM.ToDoList}"
                                            AutoGenerateColumns="False"
                                            SelectionMode="Single"
                                            SelectionUnit="FullRow"
                                            IsReadOnly="True"
                                            HeadersVisibility="Column"
                                            GridLinesVisibility="None"
                                            Focusable="False">

                                    <!-- Clear out Material styles -->
                                    <DataGrid.Resources>
                                        <Style TargetType="DataGridRow" />
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Style.Triggers>
                                                <!-- Remove selection highlight -->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                                <!-- Optional: remove hover effect on cell -->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Setter Property="BorderBrush" Value="WhiteSmoke"/>
                                            <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                            <Setter Property="Background" Value="LightBlue"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsComplete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="LightGreen"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>

                                    <DataGrid.Columns>
                                        <!--Complete Checkbox-->
                                        <DataGridTemplateColumn Header="Done" Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding IsComplete, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Task Title,Description-->
                                        <DataGridTemplateColumn Header="Task"
                                                                Width="*"
                                                                >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding Title}"
                                                                       Grid.Column="0"
                                                                       TextWrapping="Wrap"
                                                                       VerticalAlignment="Top"
                                                                       Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                                                                       />
                                                        <TextBlock Text="{Binding Description}"
                                                               TextWrapping="Wrap"
                                                               VerticalAlignment="Top"
                                                               Style="{StaticResource MaterialDesignCaptionTextBlock}"
                                                              />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Header="Due Date" Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding DueDate, StringFormat='{}{0:dd-MM-yyyy}'}"
                                                                Style="{StaticResource MaterialDesignCaptionTextBlock}"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--Remove Button-->
                                        <DataGridTemplateColumn Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Command="{Binding DataContext.ToDoListVM.RemoveItemCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                            CommandParameter="{Binding}" 
                                                            Style="{StaticResource IconButtonStyle}"
                                                            >
                                                        <materialDesign:PackIcon Kind="DeleteOutline" 
                                                                                 Height="24" 
                                                                                 Width="24"/>
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </Grid>

                    <!--Main Body Bottom Section Add New Task-->
                    <Border Grid.Row="1"
                            Background="#FAFAFA"
                            BorderThickness="1,1,0,0"
                            BorderBrush="#DDD"
                            CornerRadius="12,12,0,0"
                            Padding="8 4">
                        <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                Style="{StaticResource MaterialDesignPaperLightButton}"
                                Margin="0 8"
                                Padding="10 6"
                                HorizontalAlignment="Center"
                                ToolTip="Add new task">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Plus" Width="18" Height="18" Margin="0 0 6 0" />
                                <TextBlock Text="Add New Task" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Border>
                </Grid>
            </Grid>
        </Grid>
        
        <!--Popup Dialog Content--> 
        <materialDesign:DialogHost.DialogContent>
            <Border Width="300" Height="300" >

                <Grid Margin="8" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBox
                        Grid.Row="0"
                        Margin="8 8 8 8"
                        Text="{Binding ToDoListVM.TaskTitle}"
                        materialDesign:HintAssist.Hint="Title" 
                        VerticalAlignment="Bottom"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     />

                    <TextBox
                        Grid.Row="1"
                        Margin="8 8 8 8"
                        Height="100"
                        Text="{Binding ToDoListVM.TaskDescription}"
                        VerticalAlignment="Top"
                        materialDesign:HintAssist.Hint="Description (optional)"
                        MaxLength="256"
                        Style="{StaticResource MaterialDesignOutlinedTextBox}"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto"
                        />

                    <DatePicker
                        Grid.Row="2"
                        Margin="8 8 8 8"
                        SelectedDate="{Binding ToDoListVM.TaskDueDate, Mode=TwoWay}"
                        materialDesign:HintAssist.Hint="Due Date"
                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}"/>

                    <Grid 
                        Grid.Row="3"
                        Margin="8 8 8 8" Grid.ColumnSpan="2">
                        
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox 
                            Grid.Column="0" 
                            IsChecked="{Binding ToDoListVM.EventIsChecked}"
                            IsEnabled="{Binding AuthorizationVM.EventIsEnabled}"
                            Content="Calendar Event"/>

                        <TextBlock 
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Right"
                            Foreground="Gray"
                            Text="(Login required)"/>
                    </Grid>

                    <StackPanel
                        Grid.Row="4"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Margin="0 4 0 0" 
                        Grid.Column="1"
                         >
                        <Button
                            Content="ACCEPT"
                            IsDefault="True"
                            Margin="8 0 8 0"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            Command="{Binding ToDoListVM.SaveTaskCommand}">
                        </Button>
                        
                        <Button
                            Content="CANCEL"
                            Margin="8 0 8 0"
                            IsCancel="True"
                            Style="{StaticResource MaterialDesignFlatButton}"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>
</Window>
